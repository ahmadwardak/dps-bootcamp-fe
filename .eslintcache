[{"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/index.js":"1","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/App.js":"2","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Recipes.js":"3","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Header.js":"4","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/RecipeDetail.js":"5","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/AddRecipe.js":"6","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/EditRecipe.js":"7","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/RecipeService.js":"8","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/HttpService.js":"9"},{"size":267,"mtime":1610371164768,"results":"10","hashOfConfig":"11"},{"size":228,"mtime":1610372702875,"results":"12","hashOfConfig":"11"},{"size":4119,"mtime":1610635839472,"results":"13","hashOfConfig":"11"},{"size":232,"mtime":1610624963629,"results":"14","hashOfConfig":"11"},{"size":1420,"mtime":1610633715765,"results":"15","hashOfConfig":"11"},{"size":5690,"mtime":1610633358381,"results":"16","hashOfConfig":"11"},{"size":7635,"mtime":1610635155015,"results":"17","hashOfConfig":"11"},{"size":3155,"mtime":1610636032606,"results":"18","hashOfConfig":"11"},{"size":2686,"mtime":1610611505538,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sdz5fi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"22"},"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/index.js",[],["41","42"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/App.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Recipes.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Header.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/RecipeDetail.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/AddRecipe.js",["43"],"import React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nclass AddRecipe extends Component {\n    handleAddRecipe(e) {\n        e.preventDefault();\n        let title = this.refs.title.value.trim();\n        let description = this.refs.description.value.trim();\n        let timeNeeded = this.refs.timeNeeded.value.trim();\n        let ingredients = this.refs.ingredients.value.trim();\n        let ingredientsArray = ingredients.split(',');\n        ingredientsArray.map(function (a) {\n            return a.trim();\n        });\n\n        let recipeObject = {\n            title: title,\n            description: description,\n            timeNeeded: timeNeeded,\n            ingredients: ingredientsArray\n        };\n\n        this.props._handleAddRecipe(recipeObject);\n\n        this.refs.title.value = \"\";\n        this.refs.description.value = \"\";\n        this.refs.timeNeeded.value = \"\";\n        this.refs.ingredients.value = \"\";\n        this.props.onClose.bind(this);\n    }\n\n\n    handleSuggestion(e) {\n        e.preventDefault();\n        console.log(\"suggestion\")\n    }\n\n    render() {\n        return (\n            <Modal show={this.props.show} onHide={this.props.onClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title><h4 className=\"modal-title\">Add Recipe</h4></Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\" role=\"form\"\n                        onSubmit={this.handleAddRecipe.bind(this)}>\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\"\n                                htmlFor=\"title\">Title</label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    ref=\"title\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"title\"\n                                    placeholder=\"Title\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\"\n                                htmlFor=\"description\">Description</label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    ref=\"description\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    placeholder=\"Description\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\"\n                                htmlFor=\"timeNeeded\">Time Needed</label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    ref=\"timeNeeded\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"timeNeeded\"\n                                    placeholder=\"Time needed in min\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label\n                                className=\"col-sm-2 control-label\"\n                                htmlFor=\"Ingredients\">\n                                Ingredients</label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    ref=\"ingredients\"\n                                    type=\"textarea\"\n                                    className=\"form-control\"\n                                    id=\"ingredients\"\n                                    placeholder=\"Ingredients. Separate them by comma.\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"col-sm-6\">\n                                <Button\n                                    onClick={this.handleSuggestion.bind(this)}\n                                    type=\"submit\"\n                                    className=\"btn btn-success\">Suggest Ingredient</Button>\n                            </div>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    ref=\"suggestIngredient\"\n                                    style={{ marginTop: 10 }}\n                                    type=\"textarea\"\n                                    className=\"form-control\"\n                                    id=\"SuggestedIngredient\"\n                                    placeholder=\"Suggestion from AI Model\" />\n                            </div>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n\n                <Modal.Footer>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-sm-offset-2 col-sm-10\">\n                            <Button\n                                onClick={this.handleAddRecipe.bind(this)}\n                                type=\"submit\"\n                                className=\"btn btn-success\">Add</Button>\n                        </div>\n                    </div>\n                </Modal.Footer>\n            </Modal>\n\n        );\n    }\n};\n\nexport default AddRecipe;\n\n\n","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/EditRecipe.js",["44"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/RecipeService.js",["45","46","47","48"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/HttpService.js",["49","50"],"\"use strict\";\n\nclass HttpService {\n    constructor() {\n\n    }\n\n    static apiURL() {\n        return \"http://localhost:3000\";\n    }\n\n    static get(url, onSuccess, onError) {\n        let header = new Headers();\n\n        fetch(url, {\n            method: 'GET',\n            headers: header\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp);\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n\n    static put(url, data, onSuccess, onError) {\n        let header = new Headers();\n\n        header.append('Content-Type', 'application/json');\n\n        fetch(url, {\n            method: 'PUT',\n            headers: header,\n            body: JSON.stringify(data)\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp);\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n\n    static post(url, data, onSuccess, onError) {\n        let header = new Headers();\n\n        header.append('Content-Type', 'application/json');\n\n        fetch(url, {\n            method: 'POST',\n            headers: header,\n            body: JSON.stringify(data)\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp);\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n\n    static remove(url, data, onSuccess, onError) {\n        let header = new Headers();\n\n        header.append('Content-Type', 'application/json');\n\n        fetch(url, {\n            method: 'DELETE',\n            headers: header,\n            body: JSON.stringify(data)\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp)\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n}\n\nexport default HttpService;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":44,"column":21,"nodeType":"57","endLine":45,"endColumn":68},{"ruleId":"55","severity":1,"message":"56","line":98,"column":21,"nodeType":"57","endLine":99,"endColumn":69},{"ruleId":"58","severity":1,"message":"59","line":1,"column":1,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14,"fix":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":5,"nodeType":"65","messageId":"66","endLine":9,"endColumn":6},{"ruleId":"67","severity":1,"message":"68","line":16,"column":26,"nodeType":"69","messageId":"70","endLine":16,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":31,"column":26,"nodeType":"69","messageId":"70","endLine":31,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":1,"column":1,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14,"fix":"71"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":5,"nodeType":"65","messageId":"66","endLine":6,"endColumn":6},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"74","text":"75"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"76","text":"75"},"no-global-assign","no-unsafe-negation",[0,13],"",[0,13]]