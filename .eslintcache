[{"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/index.js":"1","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/App.js":"2","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Recipes.js":"3","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Header.js":"4","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/RecipeDetail.js":"5","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/AddRecipe.js":"6","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/EditRecipe.js":"7","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/RecipeService.js":"8","/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/HttpService.js":"9"},{"size":267,"mtime":1610371164768,"results":"10","hashOfConfig":"11"},{"size":228,"mtime":1610372702875,"results":"12","hashOfConfig":"11"},{"size":3929,"mtime":1610624610091,"results":"13","hashOfConfig":"11"},{"size":232,"mtime":1610624963629,"results":"14","hashOfConfig":"11"},{"size":1389,"mtime":1610380276883,"results":"15","hashOfConfig":"11"},{"size":5684,"mtime":1610625351262,"results":"16","hashOfConfig":"11"},{"size":7076,"mtime":1610625385223,"results":"17","hashOfConfig":"11"},{"size":3069,"mtime":1610625561115,"results":"18","hashOfConfig":"11"},{"size":2686,"mtime":1610611505538,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sdz5fi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"22"},"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/index.js",[],["40","41"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/App.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Recipes.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/Header.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/RecipeDetail.js",[],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/AddRecipe.js",["42"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/components/EditRecipe.js",["43"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/RecipeService.js",["44","45","46","47"],"/Users/awardak/Documents/GitLab/DPS/Bootcamp/baffinbay/dps-bootcamp-fe/src/services/HttpService.js",["48","49"],"\"use strict\";\n\nclass HttpService {\n    constructor() {\n\n    }\n\n    static apiURL() {\n        return \"http://localhost:3000\";\n    }\n\n    static get(url, onSuccess, onError) {\n        let header = new Headers();\n\n        fetch(url, {\n            method: 'GET',\n            headers: header\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp);\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n\n    static put(url, data, onSuccess, onError) {\n        let header = new Headers();\n\n        header.append('Content-Type', 'application/json');\n\n        fetch(url, {\n            method: 'PUT',\n            headers: header,\n            body: JSON.stringify(data)\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp);\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n\n    static post(url, data, onSuccess, onError) {\n        let header = new Headers();\n\n        header.append('Content-Type', 'application/json');\n\n        fetch(url, {\n            method: 'POST',\n            headers: header,\n            body: JSON.stringify(data)\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp);\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n\n    static remove(url, data, onSuccess, onError) {\n        let header = new Headers();\n\n        header.append('Content-Type', 'application/json');\n\n        fetch(url, {\n            method: 'DELETE',\n            headers: header,\n            body: JSON.stringify(data)\n        })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((resp) => {\n                if (resp.error) {\n                    onError(resp.error);\n                }\n                else {\n                    onSuccess(resp)\n                }\n            })\n            .catch((e) => {\n                onError(e.message);\n            });\n    }\n}\n\nexport default HttpService;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":44,"column":21,"nodeType":"56","endLine":45,"endColumn":68},{"ruleId":"54","severity":1,"message":"55","line":80,"column":21,"nodeType":"56","endLine":81,"endColumn":69},{"ruleId":"57","severity":1,"message":"58","line":1,"column":1,"nodeType":"59","messageId":"60","endLine":1,"endColumn":14,"fix":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":5,"nodeType":"64","messageId":"65","endLine":9,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":16,"column":26,"nodeType":"68","messageId":"69","endLine":16,"endColumn":28},{"ruleId":"66","severity":1,"message":"67","line":31,"column":26,"nodeType":"68","messageId":"69","endLine":31,"endColumn":28},{"ruleId":"57","severity":1,"message":"58","line":1,"column":1,"nodeType":"59","messageId":"60","endLine":1,"endColumn":14,"fix":"70"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":5,"nodeType":"64","messageId":"65","endLine":6,"endColumn":6},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"73","text":"74"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"75","text":"74"},"no-global-assign","no-unsafe-negation",[0,13],"",[0,13]]